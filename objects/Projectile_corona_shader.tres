[gd_resource type="ShaderMaterial" load_steps=22 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "time"

[sub_resource type="VisualShaderNodeDotProduct" id=2]
default_input_values = [ 0, Vector3( 12.9898, 78.233, 0 ), 1, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 43758.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 17

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
function = 17

[sub_resource type="VisualShaderNodeVectorOp" id=8]

[sub_resource type="VisualShaderNodeVec3Constant" id=9]
output_port_for_preview = 0
constant = Vector3( 1, 0, 0.313 )

[sub_resource type="VisualShaderNodeVectorOp" id=10]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0.05, 0.05, 0 ), 1, Vector3( 0.05, 0.05, 0 ) ]
operator = 4

[sub_resource type="VisualShaderNodeVectorOp" id=11]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=13]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=15]
operator = 1

[sub_resource type="VisualShaderNodeVectorDistance" id=16]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0.5, 0.5, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]

[sub_resource type="VisualShaderNodeInput" id=17]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 2.0, 1, 0.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=19]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=20]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.0, 2, 0.0 ]

[sub_resource type="VisualShader" id=21]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Vector:2
	vec3 n_out2p0 = vec3(1.000000, 0.000000, 0.313000);

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Distance:3
	vec3 n_in3p0 = vec3(0.50000, 0.50000, 0.00000);
	float n_out3p0 = distance(n_in3p0, n_out4p0);

// ScalarOp:6
	float n_in6p0 = 2.00000;
	float n_out6p0 = n_in6p0 * n_out3p0;

// ScalarOp:7
	float n_out7p0 = n_out6p0 * n_out6p0;

// ScalarSmoothStep:8
	float n_in8p0 = 1.00000;
	float n_in8p1 = 0.00000;
	float n_out8p0 = smoothstep(n_in8p0, n_in8p1, n_out7p0);

// ScalarOp:24
	float n_in24p0 = 1.00000;
	float n_out24p0 = n_in24p0 - n_out8p0;

// Input:10
	float n_out10p0 = TIME;

// ScalarFunc:18
	float n_out18p0 = fract(n_out10p0);

// ScalarOp:26
	float n_in26p1 = 0.05000;
	float n_out26p0 = mod(n_out18p0, n_in26p1);

// ScalarOp:27
	float n_out27p0 = n_out18p0 - n_out26p0;

// VectorOp:20
	vec3 n_in20p1 = vec3(0.05000, 0.05000, 0.00000);
	vec3 n_out20p0 = mod(n_out4p0, n_in20p1);

// VectorOp:21
	vec3 n_out21p0 = n_out4p0 - n_out20p0;

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out27p0) + n_out21p0;

// DotProduct:13
	vec3 n_in13p0 = vec3(12.98980, 78.23300, 0.00000);
	float n_out13p0 = dot(n_in13p0, n_out19p0);

// ScalarFunc:14
	float n_out14p0 = sin(n_out13p0);

// ScalarOp:15
	float n_in15p1 = 43758.50000;
	float n_out15p0 = n_out14p0 * n_in15p1;

// ScalarFunc:16
	float n_out16p0 = fract(n_out15p0);

// ScalarOp:25
	float n_out25p0 = n_out24p0 * n_out16p0;

// ScalarOp:17
	float n_out17p0 = n_out8p0 - n_out25p0;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out17p0;
	EMISSION = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1512.87, -4.75 )
nodes/fragment/0/position = Vector2( 760, 160 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( -300, 240 )
nodes/fragment/3/node = SubResource( 16 )
nodes/fragment/3/position = Vector2( -900, 620 )
nodes/fragment/4/node = SubResource( 17 )
nodes/fragment/4/position = Vector2( -1440, 420 )
nodes/fragment/6/node = SubResource( 18 )
nodes/fragment/6/position = Vector2( -680, 620 )
nodes/fragment/7/node = SubResource( 19 )
nodes/fragment/7/position = Vector2( -500, 620 )
nodes/fragment/8/node = SubResource( 20 )
nodes/fragment/8/position = Vector2( -300, 600 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1620, 40 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( -540, 0 )
nodes/fragment/14/node = SubResource( 3 )
nodes/fragment/14/position = Vector2( -280, 0 )
nodes/fragment/15/node = SubResource( 4 )
nodes/fragment/15/position = Vector2( -80, 0 )
nodes/fragment/16/node = SubResource( 5 )
nodes/fragment/16/position = Vector2( 140, 0 )
nodes/fragment/17/node = SubResource( 6 )
nodes/fragment/17/position = Vector2( 540, 380 )
nodes/fragment/18/node = SubResource( 7 )
nodes/fragment/18/position = Vector2( -1420, 40 )
nodes/fragment/19/node = SubResource( 8 )
nodes/fragment/19/position = Vector2( -720, 140 )
nodes/fragment/20/node = SubResource( 10 )
nodes/fragment/20/position = Vector2( -1180, 200 )
nodes/fragment/21/node = SubResource( 11 )
nodes/fragment/21/position = Vector2( -940, 400 )
nodes/fragment/24/node = SubResource( 12 )
nodes/fragment/24/position = Vector2( 120, 320 )
nodes/fragment/25/node = SubResource( 13 )
nodes/fragment/25/position = Vector2( 320, 320 )
nodes/fragment/26/node = SubResource( 14 )
nodes/fragment/26/position = Vector2( -1160, -60 )
nodes/fragment/27/node = SubResource( 15 )
nodes/fragment/27/position = Vector2( -940, 20 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 6, 1, 6, 0, 7, 0, 6, 0, 7, 1, 7, 0, 8, 2, 2, 0, 0, 5, 4, 0, 3, 1, 13, 0, 14, 0, 14, 0, 15, 0, 15, 0, 16, 0, 17, 0, 0, 1, 10, 0, 18, 0, 19, 0, 13, 1, 4, 0, 20, 0, 4, 0, 21, 0, 8, 0, 24, 1, 24, 0, 25, 0, 16, 0, 25, 1, 25, 0, 17, 1, 8, 0, 17, 0, 21, 0, 19, 1, 20, 0, 21, 1, 18, 0, 26, 0, 18, 0, 27, 0, 26, 0, 27, 1, 27, 0, 19, 0 )

[resource]
shader = SubResource( 21 )
